


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: Matthew Yu and Tatian Flores
    3 00000000         ; Last modification date: 3/24/18
    4 00000000         
    5 00000000         ; Runs on LM4F120/TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these LCD
                       _WriteCommand and LCD_WriteData
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 40004100 
                       DC      EQU              0x40004100
   23 00000000 00000000 
                       DC_COMMAND
                               EQU              0
   24 00000000 00000040 
                       DC_DATA EQU              0x40
   25 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   26 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   27 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   28 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   29 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   30 00000000         
   31 00000000                 EXPORT           writecommand
   32 00000000                 EXPORT           writedata
   33 00000000         
   34 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   35 00000000                 THUMB
   36 00000000                 ALIGN
   37 00000000         
   38 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   39 00000000         ; sent.  The SSI module has hardware input and output FI



ARM Macro Assembler    Page 2 


                       FOs
   40 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   41 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   42 00000000         ; lot of data, the FIFOs are not used when writing
   43 00000000         ; commands, and they are used when writing data.  This
   44 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   45 00000000         ; that is actually being transmitted.
   46 00000000         ; The write command operation waits until all data has b
                       een
   47 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   48 00000000         ; the command, and then waits for the transmission to
   49 00000000         ; finish.
   50 00000000         ; The write data operation waits until there is room in 
                       the
   51 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   52 00000000         ; and then adds the data to the transmit FIFO.
   53 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   54 00000000         ; the SSI0 module is not initialized and enabled.
   55 00000000         
   56 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   57 00000000         ; Input: R0  8-bit command to transmit
   58 00000000         ; Output: none
   59 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   60 00000000         writecommand
   61 00000000         ;; --UUU-- Code to write a command to the LCD
   62 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   63 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   64 00000000         ;3) Clear D/C=PA6 to zero
   65 00000000         ;4) Write the command to SSI0_DR_R
   66 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   67 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   68 00000000 4913            LDR              R1, =SSI0_SR_R
   69 00000002 F04F 0310       LDR              R3, =SSI_SR_BSY
   70 00000006         busyCheck
   71 00000006 780A            LDRB             R2, [R1]
   72 00000008 EA02 0203       AND              R2, R3
   73 0000000C 2A10            CMP              R2, #0x10
   74 0000000E D0FA            BEQ              busyCheck   ; check bit 4 is bu
                                                            sy/high (1), if yes
                                                            - check SR_R again
   75 00000010 F04F 0300       LDR              R3, =DC_COMMAND
   76 00000014 490F            LDR              R1, =DC
   77 00000016 461A            MOV              R2, R3
   78 00000018 700A            STRB             R2, [R1]
   79 0000001A         ; write command to SSIO_DR_R
   80 0000001A 490F            LDR              R1, =SSI0_DR_R
   81 0000001C 7008            STRB             R0, [R1]
   82 0000001E         ; repeat step 1 & 2
   83 0000001E 490C            LDR              R1, =SSI0_SR_R



ARM Macro Assembler    Page 3 


   84 00000020 F04F 0310       LDR              R3, =SSI_SR_BSY
   85 00000024         busyCheck2
   86 00000024 780A            LDRB             R2, [R1]
   87 00000026 EA02 0203       AND              R2, R3
   88 0000002A 2A10            CMP              R2, #0x10
   89 0000002C D0FA            BEQ              busyCheck2  ; check bit 4 is bu
                                                            sy/high (1), if yes
                                                            - check SR_R again
   90 0000002E         
   91 0000002E 4770            BX               LR          ;   return
   92 00000030         
   93 00000030         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   94 00000030         ; Input: R0  8-bit data to transmit
   95 00000030         ; Output: none
   96 00000030         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   97 00000030         writedata
   98 00000030         ;; --UUU-- Code to write data to the LCD
   99 00000030         ;1) Read SSI0_SR_R and check bit 1, 
  100 00000030         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
  101 00000030         ;3) Set D/C=PA6 to one
  102 00000030         ;4) Write the 8-bit data to SSI0_DR_R
  103 00000030 4907            LDR              R1, =SSI0_SR_R
  104 00000032 F04F 0302       LDR              R3, =SSI_SR_TNF
  105 00000036         TNFcheck
  106 00000036 780A            LDRB             R2, [R1]
  107 00000038 EA02 0203       AND              R2, R3
  108 0000003C 2A02            CMP              R2, #0x02
  109 0000003E D1FA            BNE              TNFcheck    ; check bit 1 is lo
                                                            w(0), if yes- check
                                                             SR_R again
  110 00000040 F04F 0340       LDR              R3, =DC_DATA
  111 00000044 4903            LDR              R1, =DC
  112 00000046 700B            STRB             R3, [R1]
  113 00000048         ; write command to SSIO_DR_R
  114 00000048 4903            LDR              R1, =SSI0_DR_R
  115 0000004A 7008            STRB             R0, [R1]
  116 0000004C         
  117 0000004C 4770            BX               LR          ;   return
  118 0000004E         
  119 0000004E         
  120 0000004E         ;***************************************************
  121 0000004E         ; This is a library for the Adafruit 1.8" SPI display.
  122 0000004E         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  123 0000004E         ; ----> http://www.adafruit.com/products/358
  124 0000004E         ; as well as Adafruit raw 1.8" TFT display
  125 0000004E         ; ----> http://www.adafruit.com/products/618
  126 0000004E         ;
  127 0000004E         ; Check out the links above for our tutorials and wiring
                        diagrams
  128 0000004E         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  129 0000004E         ; interface (RST is optional)
  130 0000004E         ; Adafruit invests time and resources providing this ope
                       n source code,
  131 0000004E         ; please support Adafruit and open-source hardware by pu



ARM Macro Assembler    Page 4 


                       rchasing
  132 0000004E         ; products from Adafruit!
  133 0000004E         ;
  134 0000004E         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  135 0000004E         ; MIT license, all text above must be included in any re
                       distribution
  136 0000004E         ;****************************************************
  137 0000004E         
  138 0000004E 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  139 00000050                 END                          ; end of file
              4000800C 
              40004100 
              40008008 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\lcd.d 
-o.\lcd.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\
Luminary --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 34 in file LCD.s
   Uses
      None
Comment: .text unused
TNFcheck 00000036

Symbol: TNFcheck
   Definitions
      At line 105 in file LCD.s
   Uses
      At line 109 in file LCD.s
Comment: TNFcheck used once
busyCheck 00000006

Symbol: busyCheck
   Definitions
      At line 70 in file LCD.s
   Uses
      At line 74 in file LCD.s
Comment: busyCheck used once
busyCheck2 00000024

Symbol: busyCheck2
   Definitions
      At line 85 in file LCD.s
   Uses
      At line 89 in file LCD.s
Comment: busyCheck2 used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 60 in file LCD.s
   Uses
      At line 31 in file LCD.s
Comment: writecommand used once
writedata 00000030

Symbol: writedata
   Definitions
      At line 97 in file LCD.s
   Uses
      At line 32 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DC 40004100

Symbol: DC
   Definitions
      At line 22 in file LCD.s
   Uses
      At line 76 in file LCD.s
      At line 111 in file LCD.s

DC_COMMAND 00000000

Symbol: DC_COMMAND
   Definitions
      At line 23 in file LCD.s
   Uses
      At line 75 in file LCD.s
Comment: DC_COMMAND used once
DC_DATA 00000040

Symbol: DC_DATA
   Definitions
      At line 24 in file LCD.s
   Uses
      At line 110 in file LCD.s
Comment: DC_DATA used once
SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 25 in file LCD.s
   Uses
      At line 80 in file LCD.s
      At line 114 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 26 in file LCD.s
   Uses
      At line 68 in file LCD.s
      At line 83 in file LCD.s
      At line 103 in file LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 28 in file LCD.s
   Uses
      At line 69 in file LCD.s
      At line 84 in file LCD.s

SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 27 in file LCD.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      None
Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 29 in file LCD.s
   Uses
      At line 104 in file LCD.s
Comment: SSI_SR_TNF used once
8 symbols
346 symbols in table
